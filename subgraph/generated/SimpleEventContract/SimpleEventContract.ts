// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DataEmitted extends ethereum.Event {
  get params(): DataEmitted__Params {
    return new DataEmitted__Params(this);
  }
}

export class DataEmitted__Params {
  _event: DataEmitted;

  constructor(event: DataEmitted) {
    this._event = event;
  }

  get data(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class SimpleEventContract extends ethereum.SmartContract {
  static bind(address: Address): SimpleEventContract {
    return new SimpleEventContract("SimpleEventContract", address);
  }
}

export class EmitDataCall extends ethereum.Call {
  get inputs(): EmitDataCall__Inputs {
    return new EmitDataCall__Inputs(this);
  }

  get outputs(): EmitDataCall__Outputs {
    return new EmitDataCall__Outputs(this);
  }
}

export class EmitDataCall__Inputs {
  _call: EmitDataCall;

  constructor(call: EmitDataCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class EmitDataCall__Outputs {
  _call: EmitDataCall;

  constructor(call: EmitDataCall) {
    this._call = call;
  }
}
